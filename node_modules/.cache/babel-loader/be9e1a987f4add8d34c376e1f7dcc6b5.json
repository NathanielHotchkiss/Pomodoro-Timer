{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/PomProgress.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function PomProgress({\n  timeElapsed,\n  setTimeElapsed,\n  duration,\n  setDuration,\n  isTimerRunning\n}) {\n  const {\n    bDuration,\n    fDuration,\n    focusStatus\n  } = duration;\n  const timeRemaining = focusStatus < 2 ? fDuration * 60 - timeElapsed : bDuration - timeElapsed;\n  const pauseThing = /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }\n  }, \"PAUSED\");\n  let displayBar = focusStatus < 2 ? timeElapsed / (fDuration * 60) * 100 : timeElapsed / bDuration * 100;\n\n  if (displayBar === 100) {\n    setTimeElapsed(0);\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n\n    if (focusStatus === 2) {\n      setDuration({\n        bDuration,\n        fDuration,\n        focusStatus: 1\n      });\n    } else {\n      setDuration({\n        bDuration,\n        fDuration,\n        focusStatus: 2\n      });\n    }\n  }\n\n  displayBar = Math.round(displayBar);\n  return !!focusStatus && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, focusStatus < 2 ? `Focusing for ${minutesToDuration(fDuration)} minutes` : `On Break for ${secondsToDuration(bDuration)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, `${secondsToDuration(timeRemaining)} remaining`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, !isTimerRunning ? pauseThing : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": displayBar,\n    style: {\n      width: displayBar += \"%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/PomProgress.js"],"names":["React","minutesToDuration","secondsToDuration","PomProgress","timeElapsed","setTimeElapsed","duration","setDuration","isTimerRunning","bDuration","fDuration","focusStatus","timeRemaining","pauseThing","displayBar","Audio","play","Math","round","height","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nexport default function PomProgress({\n  timeElapsed,\n  setTimeElapsed,\n  duration,\n  setDuration,\n  isTimerRunning,\n}) {\n  const { bDuration, fDuration, focusStatus } = duration;\n  const timeRemaining =\n    focusStatus < 2 ? fDuration * 60 - timeElapsed : bDuration - timeElapsed;\n  const pauseThing = <h3>PAUSED</h3>;\n  let displayBar =\n    focusStatus < 2\n      ? (timeElapsed / (fDuration * 60)) * 100\n      : (timeElapsed / bDuration) * 100;\n\n  if (displayBar === 100) {\n    setTimeElapsed(0);\n\t\tnew Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n    if (focusStatus === 2) {\n      setDuration({ bDuration, fDuration, focusStatus: 1 });\n    } else {\n      setDuration({ bDuration, fDuration, focusStatus: 2 });\n    }\n  }\n  displayBar = Math.round(displayBar);\n  return (\n    !!focusStatus && (\n      <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {focusStatus < 2\n                ? `Focusing for ${minutesToDuration(fDuration)} minutes`\n                : `On Break for ${secondsToDuration(bDuration)} minutes`}\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {`${secondsToDuration(timeRemaining)} remaining`}\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {!isTimerRunning ? pauseThing : null}\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={displayBar} \n                style={{ width: (displayBar += \"%\") }} \n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  );\n}"]},"metadata":{},"sourceType":"module"}