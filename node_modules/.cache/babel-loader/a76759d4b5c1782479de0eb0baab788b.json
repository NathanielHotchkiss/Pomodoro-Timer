{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport PomTimers from \"./PomTimers\";\nimport PomControls from \"./PomControls\";\nimport PomProgress from \"./PomProgress\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const initDuration = {\n    bDuration: 300,\n    fDuration: 25,\n    focusStatus: 0\n  };\n  const [duration, setDuration] = useState(initDuration); // bDuration is in seconds fDuration is in minutes\n  // focus status codes: 0 means paused, 1 means focus and 2 means break\n\n  useInterval(() => {\n    // this counts once per tick\n    setTimeElapsed(timeElapsed + 1);\n  }, // this sets how long one tick is\n  isTimerRunning ? 1000 : null);\n\n  function stopHandler() {\n    setIsTimerRunning(false);\n    setDuration(initDuration);\n    setTimeElapsed(0);\n  }\n\n  function playPause() {\n    if (!timeElapsed) setDuration({\n      bDuration: duration.bDuration,\n      fDuration: duration.fDuration,\n      focusStatus: 1\n    });\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PomTimers, {\n    duration: duration,\n    setDuration: setDuration,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PomControls, {\n    isTimerRunning: isTimerRunning,\n    playPause: playPause,\n    stopHandler: stopHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PomProgress, {\n    timeElapsed: timeElapsed,\n    setTimeElapsed: setTimeElapsed,\n    duration: duration,\n    setDuration: setDuration,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","PomTimers","PomControls","PomProgress","Pomodoro","isTimerRunning","setIsTimerRunning","timeElapsed","setTimeElapsed","initDuration","bDuration","fDuration","focusStatus","duration","setDuration","stopHandler","playPause","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMU,YAAY,GAAG;AAAEC,IAAAA,SAAS,EAAE,GAAb;AAAkBC,IAAAA,SAAS,EAAE,EAA7B;AAAiCC,IAAAA,WAAW,EAAE;AAA9C,GAArB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACU,YAAD,CAAxC,CALkB,CAMlB;AACA;;AAEAT,EAAAA,WAAW,CACT,MAAM;AACJ;AACAQ,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACD,GAJQ,EAKT;AACAF,EAAAA,cAAc,GAAG,IAAH,GAAU,IANf,CAAX;;AAQA,WAASU,WAAT,GAAuB;AACrBT,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAQ,IAAAA,WAAW,CAACL,YAAD,CAAX;AACAD,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD;;AACD,WAASQ,SAAT,GAAqB;AACnB,QAAI,CAACT,WAAL,EACEO,WAAW,CAAC;AACVJ,MAAAA,SAAS,EAAEG,QAAQ,CAACH,SADV;AAEVC,MAAAA,SAAS,EAAEE,QAAQ,CAACF,SAFV;AAGVC,MAAAA,WAAW,EAAE;AAHH,KAAD,CAAX;AAKFN,IAAAA,iBAAiB,CAAEW,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,cAAc,EAAET,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,WAAD;AACE,IAAA,cAAc,EAAEA,cADlB;AAEE,IAAA,SAAS,EAAEW,SAFb;AAGE,IAAA,WAAW,EAAED,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAWE,oBAAC,WAAD;AACE,IAAA,WAAW,EAAER,WADf;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,QAAQ,EAAEK,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,cAAc,EAAET,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAqBD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport PomTimers from \"./PomTimers\";\nimport PomControls from \"./PomControls\";\nimport PomProgress from \"./PomProgress\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const initDuration = { bDuration: 300, fDuration: 25, focusStatus: 0 };\n  const [duration, setDuration] = useState(initDuration);\n  // bDuration is in seconds fDuration is in minutes\n  // focus status codes: 0 means paused, 1 means focus and 2 means break\n\n  useInterval(\n    () => {\n      // this counts once per tick\n      setTimeElapsed(timeElapsed + 1);\n    },\n    // this sets how long one tick is\n    isTimerRunning ? 1000 : null\n  );\n  function stopHandler() {\n    setIsTimerRunning(false);\n    setDuration(initDuration);\n    setTimeElapsed(0);\n  }\n  function playPause() {\n    if (!timeElapsed)\n      setDuration({\n        bDuration: duration.bDuration,\n        fDuration: duration.fDuration,\n        focusStatus: 1,\n      });\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <PomTimers\n        duration={duration}\n        setDuration={setDuration}\n        isTimerRunning={isTimerRunning}\n      />\n      <PomControls\n        isTimerRunning={isTimerRunning}\n        playPause={playPause}\n        stopHandler={stopHandler}\n      />\n      <PomProgress\n        timeElapsed={timeElapsed}\n        setTimeElapsed={setTimeElapsed}\n        duration={duration}\n        setDuration={setDuration}\n        isTimerRunning={isTimerRunning}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;"]},"metadata":{},"sourceType":"module"}