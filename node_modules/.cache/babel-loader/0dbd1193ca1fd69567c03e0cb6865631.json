{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport Progress from \"./Progress\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (timeRemaining === 0) {\n      // new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/2115.mp3`).play();\n      const duration = mode === \"focus\" ? breakDuration : focusDuration; // select the correct time duration\n\n      setTimeRemaining(duration * 60); // set the time remaining to the new duration;\n\n      setMode(prevMode => prevMode === \"focus\" ? \"break\" : \"focus\");\n      return; // return will end the callback function and re-render the component\n    }\n\n    setTimeRemaining(currentTimeRemaining => currentTimeRemaining - 1);\n  }, isTimerRunning ? 100 : null); // useInterval(callback, duration)\n\n  function playPause() {\n    // if the session is false, reset our timeRemaining to default\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60); // should be in seconds\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  } // reset everything\n\n\n  const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  }; // const decreaseFocus = () => {\n  //   setFocusDuration((lastFocus) => Math.max(5, lastFocus - 5)); // take the previous focusDuration value and subtract 5\n  // };\n  // const increaseFocus = () => {\n  //   setFocusDuration((lastFocus) => Math.min(60, lastFocus + 5)); // take the previous focusDuration value and add 5\n  // };\n  // const decreaseBreak = () => {\n  //   setBreakDuration((lastBreak) => Math.max(1, lastBreak - 1));\n  // };\n  // const increaseBreak = () => {\n  //   setBreakDuration((lastBreak) => Math.min(15, lastBreak + 1));\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: decreaseFocus,\n    disabled: isSessionActive || isTimerRunning ? true : false // ternary: condition ? do this : do something else. || means == or && === and\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: increaseFocus,\n    disabled: isSessionActive || isTimerRunning ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: decreaseBreak,\n    disabled: isSessionActive || isTimerRunning ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: increaseBreak,\n    disabled: isSessionActive || isTimerRunning ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopTimer,\n    disabled: !isSessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Progress, {\n    mode: mode,\n    isTimerRunning: isTimerRunning,\n    timeRemaining: timeRemaining,\n    isSessionActive: isSessionActive,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","Progress","Pomodoro","isTimerRunning","setIsTimerRunning","focusDuration","setFocusDuration","breakDuration","setBreakDuration","timeRemaining","setTimeRemaining","mode","setMode","isSessionActive","setIsSessionActive","Audio","play","duration","prevMode","currentTimeRemaining","playPause","prevState","stopTimer","decreaseFocus","increaseFocus","decreaseBreak","increaseBreak","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport Progress from \"./Progress\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if (timeRemaining === 0) {\n        // new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/2115.mp3`).play();\n        const duration = mode === \"focus\" ? breakDuration : focusDuration; // select the correct time duration\n        setTimeRemaining(duration * 60); // set the time remaining to the new duration;\n        setMode((prevMode) => (prevMode === \"focus\" ? \"break\" : \"focus\"));\n        return; // return will end the callback function and re-render the component\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 100 : null\n  );\n\n  // useInterval(callback, duration)\n\n  function playPause() {\n    // if the session is false, reset our timeRemaining to default\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60); // should be in seconds\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  // reset everything\n  const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  // const decreaseFocus = () => {\n  //   setFocusDuration((lastFocus) => Math.max(5, lastFocus - 5)); // take the previous focusDuration value and subtract 5\n  // };\n\n  // const increaseFocus = () => {\n  //   setFocusDuration((lastFocus) => Math.min(60, lastFocus + 5)); // take the previous focusDuration value and add 5\n  // };\n\n  // const decreaseBreak = () => {\n  //   setBreakDuration((lastBreak) => Math.max(1, lastBreak - 1));\n  // };\n\n  // const increaseBreak = () => {\n  //   setBreakDuration((lastBreak) => Math.min(15, lastBreak + 1));\n  // };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n\n\n        \n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={decreaseFocus}\n                disabled={isSessionActive || isTimerRunning ? true : false} // ternary: condition ? do this : do something else. || means == or && === and\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={increaseFocus}\n                disabled={isSessionActive || isTimerRunning ? true : false}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={decreaseBreak}\n                  disabled={isSessionActive || isTimerRunning ? true : false}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={increaseBreak}\n                  disabled={isSessionActive || isTimerRunning ? true : false}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopTimer}\n              disabled={!isSessionActive}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <Progress\n        mode={mode}\n        isTimerRunning={isTimerRunning}\n        timeRemaining={timeRemaining}\n        isSessionActive={isSessionActive}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}