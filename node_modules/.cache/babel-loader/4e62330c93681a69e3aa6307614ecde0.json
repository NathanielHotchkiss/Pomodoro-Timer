{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Progress from \"./Progress\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (timeRemaining === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/2115.mp3`).play();\n      const duration = mode === \"focus\" ? breakDuration : focusDuration; // select the correct time duration\n\n      setTimeRemaining(duration * 60); // set the time remaining to the new duration;\n\n      setMode(prevMode => prevMode === \"focus\" ? \"break\" : \"focus\");\n      return; // return will end the callback function and re-render the component\n    }\n\n    setTimeRemaining(currentTimeRemaining => currentTimeRemaining - 1);\n  }, isTimerRunning ? 100 : null); // useInterval(callback, duration)\n\n  function playPause() {\n    // if the session is false, reset our timeRemaining to default\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60); // should be in seconds\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  } // reset everything\n\n\n  const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Break, {\n    isTimerRunning: isTimerRunning,\n    isSessionActive: isSessionActive,\n    breakDuration: breakDuration,\n    setBreakDuration: setBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Focus, {\n    isTimerRunning: isTimerRunning,\n    isSessionActive: isSessionActive,\n    focusDuration: focusDuration,\n    setFocusDuration: setFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopTimer,\n    disabled: !isSessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Progress, {\n    mode: mode,\n    isTimerRunning: isTimerRunning,\n    timeRemaining: timeRemaining,\n    isSessionActive: isSessionActive,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Progress","Pomodoro","isTimerRunning","setIsTimerRunning","focusDuration","setFocusDuration","breakDuration","setBreakDuration","timeRemaining","setTimeRemaining","mode","setMode","isSessionActive","setIsSessionActive","Audio","play","duration","prevMode","currentTimeRemaining","playPause","prevState","stopTimer","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Progress from \"./Progress\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if (timeRemaining === 0) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/2115.mp3`).play();\n        const duration = mode === \"focus\" ? breakDuration : focusDuration; // select the correct time duration\n        setTimeRemaining(duration * 60); // set the time remaining to the new duration;\n        setMode((prevMode) => (prevMode === \"focus\" ? \"break\" : \"focus\"));\n        return; // return will end the callback function and re-render the component\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 100 : null\n  );\n\n  // useInterval(callback, duration)\n\n  function playPause() {\n    // if the session is false, reset our timeRemaining to default\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60); // should be in seconds\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  // reset everything\n  const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <Break\n          isTimerRunning={isTimerRunning}\n          isSessionActive={isSessionActive}\n          breakDuration={breakDuration}\n          setBreakDuration={setBreakDuration}\n        />\n        <Focus\n          isTimerRunning={isTimerRunning}\n          isSessionActive={isSessionActive}\n          focusDuration={focusDuration}\n          setFocusDuration={setFocusDuration}\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopTimer}\n              disabled={!isSessionActive}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Progress\n        mode={mode}\n        isTimerRunning={isTimerRunning}\n        timeRemaining={timeRemaining}\n        isSessionActive={isSessionActive}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}