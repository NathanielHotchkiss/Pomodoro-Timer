{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Progress from \"./Progress\";\nimport Break from \"./Break\";\nimport Focus from \"./Focus\";\nimport Controls from \"./Controls\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (timeRemaining === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/2115.mp3`).play();\n      const duration = mode === \"focus\" ? breakDuration : focusDuration; // select the correct time duration\n\n      setTimeRemaining(duration * 60); // set the time remaining to the new duration;\n\n      setMode(prevMode => prevMode === \"focus\" ? \"break\" : \"focus\");\n      return; // return will end the callback function and re-render the component\n    }\n\n    setTimeRemaining(currentTimeRemaining => currentTimeRemaining - 1);\n  }, isTimerRunning ? 100 : null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Focus, {\n    isTimerRunning: isTimerRunning,\n    isSessionActive: isSessionActive,\n    focusDuration: focusDuration,\n    setFocusDuration: setFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    isTimerRunning: isTimerRunning,\n    isSessionActive: isSessionActive,\n    breakDuration: breakDuration,\n    setBreakDuration: setBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Controls, {\n    isTimerRunning: isTimerRunning,\n    isSessionActive: isSessionActive,\n    timeRemaining: timeRemaining,\n    isSessionActive: isSessionActive,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    setIsSessionActive: setIsSessionActive,\n    setIsTimerRunning: setIsTimerRunning,\n    setTimeRemaining: setTimeRemaining,\n    setMode: setMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Progress, {\n    mode: mode,\n    isTimerRunning: isTimerRunning,\n    timeRemaining: timeRemaining,\n    isSessionActive: isSessionActive,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/nathanielhotchkiss/Desktop/Projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Progress","Break","Focus","Controls","Pomodoro","isTimerRunning","setIsTimerRunning","focusDuration","setFocusDuration","breakDuration","setBreakDuration","timeRemaining","setTimeRemaining","mode","setMode","isSessionActive","setIsSessionActive","Audio","play","duration","prevMode","currentTimeRemaining"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Progress from \"./Progress\";\nimport Break from \"./Break\";\nimport Focus from \"./Focus\";\nimport Controls from \"./Controls\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if (timeRemaining === 0) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/2115.mp3`).play();\n        const duration = mode === \"focus\" ? breakDuration : focusDuration; // select the correct time duration\n        setTimeRemaining(duration * 60); // set the time remaining to the new duration;\n        setMode((prevMode) => (prevMode === \"focus\" ? \"break\" : \"focus\"));\n        return; // return will end the callback function and re-render the component\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 100 : null\n  );\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <Focus\n          isTimerRunning={isTimerRunning}\n          isSessionActive={isSessionActive}\n          focusDuration={focusDuration}\n          setFocusDuration={setFocusDuration}\n        />\n\n        <Break\n          isTimerRunning={isTimerRunning}\n          isSessionActive={isSessionActive}\n          breakDuration={breakDuration}\n          setBreakDuration={setBreakDuration}\n        />\n      </div>\n      <Controls\n        isTimerRunning={isTimerRunning}\n        isSessionActive={isSessionActive}\n        timeRemaining={timeRemaining}\n        isSessionActive={isSessionActive}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n        setIsSessionActive={setIsSessionActive}\n        setIsTimerRunning={setIsTimerRunning}\n        setTimeRemaining={setTimeRemaining}\n        setMode={setMode}\n      />\n      <Progress\n        mode={mode}\n        isTimerRunning={isTimerRunning}\n        timeRemaining={timeRemaining}\n        isSessionActive={isSessionActive}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}